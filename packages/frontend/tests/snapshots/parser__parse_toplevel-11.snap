---
source: packages/frontend/tests/parser.rs
expression: output
input_file: packages/frontend/tests/passing/toplevel.nemo
---
global _ = 1 + 1;
global _ = 1 + 1 + 1;
global _ = 1 * 1 + 1;
global _ = 1 + 1 * 1;
global _ = 1 <= 2 && 1 < 1 || 1 >= 3 && 3 > 4 || 1 == 1 || 1 != 2;
global _ = 1 + x.y;
global _ = f32_abs(delta_x) > f32_abs(delta_y);


---
Root@0..219
  TopGlobal@0..18
    LINEFEED@0..1 "\n"
    GLOBAL_KW@1..7 "global"
    SPACE@7..8 " "
    IDENT@8..9 "_"
    SPACE@9..10 " "
    EQUALS@10..11 "="
    SPACE@11..12 " "
    EBinary@12..17
      ELit@12..14
        LitInt@12..14
          INT_LIT@12..13 "1"
          SPACE@13..14 " "
      BinOp@14..16
        PLUS@14..15 "+"
        SPACE@15..16 " "
      ELit@16..17
        LitInt@16..17
          INT_LIT@16..17 "1"
    SEMICOLON@17..18 ";"
  TopGlobal@18..40
    LINEFEED@18..19 "\n"
    GLOBAL_KW@19..25 "global"
    SPACE@25..26 " "
    IDENT@26..27 "_"
    SPACE@27..28 " "
    EQUALS@28..29 "="
    SPACE@29..30 " "
    EBinary@30..39
      ELit@30..32
        LitInt@30..32
          INT_LIT@30..31 "1"
          SPACE@31..32 " "
      BinOp@32..34
        PLUS@32..33 "+"
        SPACE@33..34 " "
      EBinary@34..39
        ELit@34..36
          LitInt@34..36
            INT_LIT@34..35 "1"
            SPACE@35..36 " "
        BinOp@36..38
          PLUS@36..37 "+"
          SPACE@37..38 " "
        ELit@38..39
          LitInt@38..39
            INT_LIT@38..39 "1"
    SEMICOLON@39..40 ";"
  TopGlobal@40..62
    LINEFEED@40..41 "\n"
    GLOBAL_KW@41..47 "global"
    SPACE@47..48 " "
    IDENT@48..49 "_"
    SPACE@49..50 " "
    EQUALS@50..51 "="
    SPACE@51..52 " "
    EBinary@52..61
      EBinary@52..58
        ELit@52..54
          LitInt@52..54
            INT_LIT@52..53 "1"
            SPACE@53..54 " "
        BinOp@54..56
          STAR@54..55 "*"
          SPACE@55..56 " "
        ELit@56..58
          LitInt@56..58
            INT_LIT@56..57 "1"
            SPACE@57..58 " "
      BinOp@58..60
        PLUS@58..59 "+"
        SPACE@59..60 " "
      ELit@60..61
        LitInt@60..61
          INT_LIT@60..61 "1"
    SEMICOLON@61..62 ";"
  TopGlobal@62..84
    LINEFEED@62..63 "\n"
    GLOBAL_KW@63..69 "global"
    SPACE@69..70 " "
    IDENT@70..71 "_"
    SPACE@71..72 " "
    EQUALS@72..73 "="
    SPACE@73..74 " "
    EBinary@74..83
      ELit@74..76
        LitInt@74..76
          INT_LIT@74..75 "1"
          SPACE@75..76 " "
      BinOp@76..78
        PLUS@76..77 "+"
        SPACE@77..78 " "
      EBinary@78..83
        ELit@78..80
          LitInt@78..80
            INT_LIT@78..79 "1"
            SPACE@79..80 " "
        BinOp@80..82
          STAR@80..81 "*"
          SPACE@81..82 " "
        ELit@82..83
          LitInt@82..83
            INT_LIT@82..83 "1"
    SEMICOLON@83..84 ";"
  TopGlobal@84..151
    LINEFEED@84..85 "\n"
    GLOBAL_KW@85..91 "global"
    SPACE@91..92 " "
    IDENT@92..93 "_"
    SPACE@93..94 " "
    EQUALS@94..95 "="
    SPACE@95..96 " "
    EBinary@96..150
      EBinary@96..103
        ELit@96..98
          LitInt@96..98
            INT_LIT@96..97 "1"
            SPACE@97..98 " "
        BinOp@98..101
          R_ANGLE_EQ@98..100 "<="
          SPACE@100..101 " "
        ELit@101..103
          LitInt@101..103
            INT_LIT@101..102 "2"
            SPACE@102..103 " "
      BinOp@103..106
        ANDAND@103..105 "&&"
        SPACE@105..106 " "
      EBinary@106..150
        EBinary@106..122
          EBinary@106..112
            ELit@106..108
              LitInt@106..108
                INT_LIT@106..107 "1"
                SPACE@107..108 " "
            BinOp@108..110
              L_ANGLE@108..109 "<"
              SPACE@109..110 " "
            ELit@110..112
              LitInt@110..112
                INT_LIT@110..111 "1"
                SPACE@111..112 " "
          BinOp@112..115
            OROR@112..114 "||"
            SPACE@114..115 " "
          EBinary@115..122
            ELit@115..117
              LitInt@115..117
                INT_LIT@115..116 "1"
                SPACE@116..117 " "
            BinOp@117..120
              L_ANGLE_EQ@117..119 ">="
              SPACE@119..120 " "
            ELit@120..122
              LitInt@120..122
                INT_LIT@120..121 "3"
                SPACE@121..122 " "
        BinOp@122..125
          ANDAND@122..124 "&&"
          SPACE@124..125 " "
        EBinary@125..150
          EBinary@125..131
            ELit@125..127
              LitInt@125..127
                INT_LIT@125..126 "3"
                SPACE@126..127 " "
            BinOp@127..129
              R_ANGLE@127..128 ">"
              SPACE@128..129 " "
            ELit@129..131
              LitInt@129..131
                INT_LIT@129..130 "4"
                SPACE@130..131 " "
          BinOp@131..134
            OROR@131..133 "||"
            SPACE@133..134 " "
          EBinary@134..150
            EBinary@134..141
              ELit@134..136
                LitInt@134..136
                  INT_LIT@134..135 "1"
                  SPACE@135..136 " "
              BinOp@136..139
                DOUBLE_EQUALS@136..138 "=="
                SPACE@138..139 " "
              ELit@139..141
                LitInt@139..141
                  INT_LIT@139..140 "1"
                  SPACE@140..141 " "
            BinOp@141..144
              OROR@141..143 "||"
              SPACE@143..144 " "
            EBinary@144..150
              ELit@144..146
                LitInt@144..146
                  INT_LIT@144..145 "1"
                  SPACE@145..146 " "
              BinOp@146..149
                NOT_EQUALS@146..148 "!="
                SPACE@148..149 " "
              ELit@149..150
                LitInt@149..150
                  INT_LIT@149..150 "2"
    SEMICOLON@150..151 ";"
  TopGlobal@151..171
    LINEFEED@151..152 "\n"
    GLOBAL_KW@152..158 "global"
    SPACE@158..159 " "
    IDENT@159..160 "_"
    SPACE@160..161 " "
    EQUALS@161..162 "="
    SPACE@162..163 " "
    EBinary@163..170
      ELit@163..165
        LitInt@163..165
          INT_LIT@163..164 "1"
          SPACE@164..165 " "
      BinOp@165..167
        PLUS@165..166 "+"
        SPACE@166..167 " "
      EStructIdx@167..170
        EVar@167..168
          IDENT@167..168 "x"
        DOT@168..169 "."
        IDENT@169..170 "y"
    SEMICOLON@170..171 ";"
  TopGlobal@171..219
    LINEFEED@171..172 "\n"
    GLOBAL_KW@172..178 "global"
    SPACE@178..179 " "
    IDENT@179..180 "_"
    SPACE@180..181 " "
    EQUALS@181..182 "="
    SPACE@182..183 " "
    EBinary@183..218
      ECall@183..200
        EVar@183..190
          IDENT@183..190 "f32_abs"
        EArgList@190..200
          L_PAREN@190..191 "("
          EVar@191..198
            IDENT@191..198 "delta_x"
          R_PAREN@198..199 ")"
          SPACE@199..200 " "
      BinOp@200..202
        R_ANGLE@200..201 ">"
        SPACE@201..202 " "
      ECall@202..218
        EVar@202..209
          IDENT@202..209 "f32_abs"
        EArgList@209..218
          L_PAREN@209..210 "("
          EVar@210..217
            IDENT@210..217 "delta_y"
          R_PAREN@217..218 ")"
    SEMICOLON@218..219 ";"
