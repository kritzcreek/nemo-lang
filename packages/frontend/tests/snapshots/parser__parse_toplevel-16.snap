---
source: packages/frontend/tests/parser.rs
expression: output
input_file: packages/frontend/tests/passing/toplevel.nemo
---
fn poly[a, b](a : a, other : b) {
  poly#[i32, bool](1, true)
}


// ---
Root@0..64
  TopFn@0..64
    LINEFEED@0..1 "\n"
    FN_KW@1..3 "fn"
    SPACE@3..4 " "
    IDENT@4..8 "poly"
    L_BRACKET@8..9 "["
    ParamTy@9..12
      IDENT@9..10 "a"
      COMMA@10..11 ","
      SPACE@11..12 " "
    ParamTy@12..13
      IDENT@12..13 "b"
    R_BRACKET@13..14 "]"
    L_PAREN@14..15 "("
    Param@15..22
      IDENT@15..16 "a"
      SPACE@16..17 " "
      COLON@17..18 ":"
      SPACE@18..19 " "
      TyVar@19..20
        IDENT@19..20 "a"
      COMMA@20..21 ","
      SPACE@21..22 " "
    Param@22..31
      IDENT@22..27 "other"
      SPACE@27..28 " "
      COLON@28..29 ":"
      SPACE@29..30 " "
      TyVar@30..31
        IDENT@30..31 "b"
    R_PAREN@31..32 ")"
    SPACE@32..33 " "
    EBlock@33..64
      L_BRACE@33..34 "{"
      DExpr@34..62
        ECall@34..62
          EVar@34..41
            LINEFEED@34..35 "\n"
            SPACE@35..37 "  "
            IDENT@37..41 "poly"
          ETyArgList@41..53
            HASH@41..42 "#"
            L_BRACKET@42..43 "["
            TyInt@43..46
              I32_BUILTIN@43..46 "i32"
            COMMA@46..47 ","
            SPACE@47..48 " "
            TyBool@48..52
              BOOL_BUILTIN@48..52 "bool"
            R_BRACKET@52..53 "]"
          EArgList@53..62
            L_PAREN@53..54 "("
            ELit@54..55
              LitInt@54..55
                INT_LIT@54..55 "1"
            COMMA@55..56 ","
            SPACE@56..57 " "
            ELit@57..61
              LitBool@57..61
                TRUE_KW@57..61 "true"
            R_PAREN@61..62 ")"
      LINEFEED@62..63 "\n"
      R_BRACE@63..64 "}"
