---
source: packages/frontend/tests/parser.rs
expression: output
input_file: packages/frontend/tests/passing/toplevel.nemo
---
import internal : fn (i32, f32) -> i32 from external

struct Vec {
  x : f32,
  y : f32,
}

global x = 10;
global y : f32 = 10.0;

fn main() = {

}

fn add(x : i32, y : i32) : i32 = {
    x + y
}


---
Root@0..196
  TopImport@0..53
    LINEFEED@0..1 "\n"
    IMPORT_KW@1..7 "import"
    SPACE@7..8 " "
    ImpInternal@8..17
      IDENT@8..16 "internal"
      SPACE@16..17 " "
    COLON@17..18 ":"
    SPACE@18..19 " "
    TyFn@19..40
      FN_KW@19..21 "fn"
      SPACE@21..22 " "
      TyArgList@22..33
        L_PAREN@22..23 "("
        TyInt@23..26
          I32_BUILTIN@23..26 "i32"
        COMMA@26..27 ","
        SPACE@27..28 " "
        TyFloat@28..31
          F32_BUILTIN@28..31 "f32"
        R_PAREN@31..32 ")"
        SPACE@32..33 " "
      ARROW@33..35 "->"
      SPACE@35..36 " "
      TyInt@36..40
        I32_BUILTIN@36..39 "i32"
        SPACE@39..40 " "
    FROM_KW@40..44 "from"
    SPACE@44..45 " "
    ImpExternal@45..53
      IDENT@45..53 "external"
  TopStruct@53..91
    LINEFEED@53..54 "\n"
    LINEFEED@54..55 "\n"
    STRUCT_KW@55..61 "struct"
    SPACE@61..62 " "
    UPPER_IDENT@62..65 "Vec"
    SPACE@65..66 " "
    L_BRACE@66..67 "{"
    StructField@67..77
      LINEFEED@67..68 "\n"
      SPACE@68..70 "  "
      IDENT@70..71 "x"
      SPACE@71..72 " "
      COLON@72..73 ":"
      SPACE@73..74 " "
      TyFloat@74..77
        F32_BUILTIN@74..77 "f32"
    COMMA@77..78 ","
    StructField@78..88
      LINEFEED@78..79 "\n"
      SPACE@79..81 "  "
      IDENT@81..82 "y"
      SPACE@82..83 " "
      COLON@83..84 ":"
      SPACE@84..85 " "
      TyFloat@85..88
        F32_BUILTIN@85..88 "f32"
    COMMA@88..89 ","
    LINEFEED@89..90 "\n"
    R_BRACE@90..91 "}"
  TopGlobal@91..107
    LINEFEED@91..92 "\n"
    LINEFEED@92..93 "\n"
    GLOBAL_KW@93..99 "global"
    SPACE@99..100 " "
    IDENT@100..101 "x"
    SPACE@101..102 " "
    EQUALS@102..103 "="
    SPACE@103..104 " "
    ELit@104..106
      LitInt@104..106
        INT_LIT@104..106 "10"
    SEMICOLON@106..107 ";"
  TopGlobal@107..130
    LINEFEED@107..108 "\n"
    GLOBAL_KW@108..114 "global"
    SPACE@114..115 " "
    IDENT@115..116 "y"
    SPACE@116..117 " "
    COLON@117..118 ":"
    SPACE@118..119 " "
    TyFloat@119..123
      F32_BUILTIN@119..122 "f32"
      SPACE@122..123 " "
    EQUALS@123..124 "="
    SPACE@124..125 " "
    ELit@125..129
      LitFloat@125..129
        FLOAT_LIT@125..129 "10.0"
    SEMICOLON@129..130 ";"
  TopFn@130..148
    LINEFEED@130..131 "\n"
    LINEFEED@131..132 "\n"
    FN_KW@132..134 "fn"
    SPACE@134..135 " "
    IDENT@135..139 "main"
    L_PAREN@139..140 "("
    R_PAREN@140..141 ")"
    SPACE@141..142 " "
    EQUALS@142..143 "="
    SPACE@143..144 " "
    EBlock@144..148
      L_BRACE@144..145 "{"
      LINEFEED@145..146 "\n"
      LINEFEED@146..147 "\n"
      R_BRACE@147..148 "}"
  TopFn@148..196
    LINEFEED@148..149 "\n"
    LINEFEED@149..150 "\n"
    FN_KW@150..152 "fn"
    SPACE@152..153 " "
    IDENT@153..156 "add"
    L_PAREN@156..157 "("
    Param@157..166
      IDENT@157..158 "x"
      SPACE@158..159 " "
      COLON@159..160 ":"
      SPACE@160..161 " "
      TyInt@161..164
        I32_BUILTIN@161..164 "i32"
      COMMA@164..165 ","
      SPACE@165..166 " "
    Param@166..173
      IDENT@166..167 "y"
      SPACE@167..168 " "
      COLON@168..169 ":"
      SPACE@169..170 " "
      TyInt@170..173
        I32_BUILTIN@170..173 "i32"
    R_PAREN@173..174 ")"
    SPACE@174..175 " "
    COLON@175..176 ":"
    SPACE@176..177 " "
    TyInt@177..181
      I32_BUILTIN@177..180 "i32"
      SPACE@180..181 " "
    EQUALS@181..182 "="
    SPACE@182..183 " "
    EBlock@183..196
      L_BRACE@183..184 "{"
      DExpr@184..194
        EBinary@184..194
          EVar@184..191
            LINEFEED@184..185 "\n"
            SPACE@185..189 "    "
            IDENT@189..190 "x"
            SPACE@190..191 " "
          BinOp@191..193
            PLUS@191..192 "+"
            SPACE@192..193 " "
          EVar@193..194
            IDENT@193..194 "y"
      LINEFEED@194..195 "\n"
      R_BRACE@195..196 "}"
