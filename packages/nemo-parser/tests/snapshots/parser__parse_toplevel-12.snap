---
source: packages/nemo-parser/tests/parser.rs
expression: output
input_file: packages/nemo-parser/tests/passing/toplevel.nemo
---

let _ = {
    let x = 1;
    let y : i32 = 10;
    set x = 1;
    set x[0] = 1;
    set x.y = 1;
    set x[0].y = 1;
    set x.y[0] = 1;
    while x {
      1;
      2
    };
};


---
Root@0..178
  TopLet@0..178
    LINEFEED@0..1 "\n"
    LET_KW@1..4 "let"
    SPACE@4..5 " "
    IDENT@5..6 "_"
    SPACE@6..7 " "
    EQUALS@7..8 "="
    SPACE@8..9 " "
    EBlock@9..177
      L_BRACE@9..10 "{"
      DLet@10..24
        LINEFEED@10..11 "\n"
        SPACE@11..15 "    "
        LET_KW@15..18 "let"
        SPACE@18..19 " "
        IDENT@19..20 "x"
        SPACE@20..21 " "
        EQUALS@21..22 "="
        SPACE@22..23 " "
        ELit@23..24
          LitInt@23..24
            INT_LIT@23..24 "1"
      SEMICOLON@24..25 ";"
      DLet@25..46
        LINEFEED@25..26 "\n"
        SPACE@26..30 "    "
        LET_KW@30..33 "let"
        SPACE@33..34 " "
        IDENT@34..35 "y"
        SPACE@35..36 " "
        COLON@36..37 ":"
        SPACE@37..38 " "
        TyInt@38..42
          I32_BUILTIN@38..41 "i32"
          SPACE@41..42 " "
        EQUALS@42..43 "="
        SPACE@43..44 " "
        ELit@44..46
          LitInt@44..46
            INT_LIT@44..46 "10"
      SEMICOLON@46..47 ";"
      DSet@47..61
        LINEFEED@47..48 "\n"
        SPACE@48..52 "    "
        SET_KW@52..55 "set"
        SPACE@55..56 " "
        SetTarget@56..58
          IDENT@56..57 "x"
          SPACE@57..58 " "
        EQUALS@58..59 "="
        SPACE@59..60 " "
        ELit@60..61
          LitInt@60..61
            INT_LIT@60..61 "1"
      SEMICOLON@61..62 ";"
      DSet@62..79
        LINEFEED@62..63 "\n"
        SPACE@63..67 "    "
        SET_KW@67..70 "set"
        SPACE@70..71 " "
        SetTarget@71..76
          IDENT@71..72 "x"
          SetArray@72..76
            L_BRACKET@72..73 "["
            ELit@73..74
              LitInt@73..74
                INT_LIT@73..74 "0"
            R_BRACKET@74..75 "]"
            SPACE@75..76 " "
        EQUALS@76..77 "="
        SPACE@77..78 " "
        ELit@78..79
          LitInt@78..79
            INT_LIT@78..79 "1"
      SEMICOLON@79..80 ";"
      DSet@80..96
        LINEFEED@80..81 "\n"
        SPACE@81..85 "    "
        SET_KW@85..88 "set"
        SPACE@88..89 " "
        SetTarget@89..93
          IDENT@89..90 "x"
          SetStruct@90..93
            DOT@90..91 "."
            IDENT@91..92 "y"
            SPACE@92..93 " "
        EQUALS@93..94 "="
        SPACE@94..95 " "
        ELit@95..96
          LitInt@95..96
            INT_LIT@95..96 "1"
      SEMICOLON@96..97 ";"
      DSet@97..116
        LINEFEED@97..98 "\n"
        SPACE@98..102 "    "
        SET_KW@102..105 "set"
        SPACE@105..106 " "
        SetTarget@106..113
          IDENT@106..107 "x"
          SetArray@107..110
            L_BRACKET@107..108 "["
            ELit@108..109
              LitInt@108..109
                INT_LIT@108..109 "0"
            R_BRACKET@109..110 "]"
          SetStruct@110..113
            DOT@110..111 "."
            IDENT@111..112 "y"
            SPACE@112..113 " "
        EQUALS@113..114 "="
        SPACE@114..115 " "
        ELit@115..116
          LitInt@115..116
            INT_LIT@115..116 "1"
      SEMICOLON@116..117 ";"
      DSet@117..136
        LINEFEED@117..118 "\n"
        SPACE@118..122 "    "
        SET_KW@122..125 "set"
        SPACE@125..126 " "
        SetTarget@126..133
          IDENT@126..127 "x"
          SetStruct@127..129
            DOT@127..128 "."
            IDENT@128..129 "y"
          SetArray@129..133
            L_BRACKET@129..130 "["
            ELit@130..131
              LitInt@130..131
                INT_LIT@130..131 "0"
            R_BRACKET@131..132 "]"
            SPACE@132..133 " "
        EQUALS@133..134 "="
        SPACE@134..135 " "
        ELit@135..136
          LitInt@135..136
            INT_LIT@135..136 "1"
      SEMICOLON@136..137 ";"
      DWhile@137..174
        LINEFEED@137..138 "\n"
        SPACE@138..142 "    "
        WHILE_KW@142..147 "while"
        SPACE@147..148 " "
        EVar@148..150
          IDENT@148..149 "x"
          SPACE@149..150 " "
        EBlock@150..174
          L_BRACE@150..151 "{"
          DExpr@151..159
            ELit@151..159
              LitInt@151..159
                LINEFEED@151..152 "\n"
                SPACE@152..158 "      "
                INT_LIT@158..159 "1"
          SEMICOLON@159..160 ";"
          DExpr@160..168
            ELit@160..168
              LitInt@160..168
                LINEFEED@160..161 "\n"
                SPACE@161..167 "      "
                INT_LIT@167..168 "2"
          LINEFEED@168..169 "\n"
          SPACE@169..173 "    "
          R_BRACE@173..174 "}"
      SEMICOLON@174..175 ";"
      LINEFEED@175..176 "\n"
      R_BRACE@176..177 "}"
    SEMICOLON@177..178 ";"

