---
source: packages/nemo-parser/tests/parser.rs
expression: output
input_file: packages/nemo-parser/tests/passing/toplevel.nemo
---

let _ = if true { 1 } else { 3 };


---
Root@0..34
  TopLet@0..34
    LINEFEED@0..1 "\n"
    LET_KW@1..4 "let"
    SPACE@4..5 " "
    IDENT@5..6 "_"
    SPACE@6..7 " "
    EQUALS@7..8 "="
    SPACE@8..9 " "
    EIf@9..33
      IF_KW@9..11 "if"
      SPACE@11..12 " "
      ELit@12..17
        LitBool@12..17
          TRUE_KW@12..16 "true"
          SPACE@16..17 " "
      EBlock@17..23
        L_BRACE@17..18 "{"
        SPACE@18..19 " "
        ELit@19..21
          LitInt@19..21
            INT_LIT@19..20 "1"
            SPACE@20..21 " "
        R_BRACE@21..22 "}"
        SPACE@22..23 " "
      ELSE_KW@23..27 "else"
      SPACE@27..28 " "
      EBlock@28..33
        L_BRACE@28..29 "{"
        SPACE@29..30 " "
        ELit@30..32
          LitInt@30..32
            INT_LIT@30..31 "3"
            SPACE@31..32 " "
        R_BRACE@32..33 "}"
    SEMICOLON@33..34 ";"

