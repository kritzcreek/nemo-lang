---
source: packages/nemo-parser/tests/parser.rs
expression: output
input_file: packages/nemo-parser/tests/passing/toplevel.nemo
---

let _ = @array_len([]);
let _ = @array_new(1, 2);


---
Root@0..50
  TopLet@0..24
    LINEFEED@0..1 "\n"
    LET_KW@1..4 "let"
    SPACE@4..5 " "
    IDENT@5..6 "_"
    SPACE@6..7 " "
    EQUALS@7..8 "="
    SPACE@8..9 " "
    EIntrinsic@9..23
      AT_IDENT@9..19 "@array_len"
      EArgList@19..23
        L_PAREN@19..20 "("
        EArray@20..22
          L_BRACKET@20..21 "["
          R_BRACKET@21..22 "]"
        R_PAREN@22..23 ")"
    SEMICOLON@23..24 ";"
  TopLet@24..50
    LINEFEED@24..25 "\n"
    LET_KW@25..28 "let"
    SPACE@28..29 " "
    IDENT@29..30 "_"
    SPACE@30..31 " "
    EQUALS@31..32 "="
    SPACE@32..33 " "
    EIntrinsic@33..49
      AT_IDENT@33..43 "@array_new"
      EArgList@43..49
        L_PAREN@43..44 "("
        ELit@44..45
          LitInt@44..45
            INT_LIT@44..45 "1"
        COMMA@45..46 ","
        SPACE@46..47 " "
        ELit@47..48
          LitInt@47..48
            INT_LIT@47..48 "2"
        R_PAREN@48..49 ")"
    SEMICOLON@49..50 ";"

