---
source: packages/nemo-parser/tests/parser.rs
expression: output
input_file: packages/nemo-parser/tests/passing/toplevel.nemo
---

let _ = @array_len([]);
let _ = @array_new(1, 2);


---
Root@0..48
  TopLet@0..23
    LINEFEED@0..1 "\n"
    LET_KW@1..4 "let"
    SPACE@4..5 " "
    IDENT@5..6 "_"
    SPACE@6..7 " "
    EQUALS@7..8 "="
    SPACE@8..9 " "
    ECall@9..22
      EVar@9..18
        IDENT@9..18 "array_len"
      L_PAREN@18..19 "("
      EArray@19..21
        L_BRACKET@19..20 "["
        R_BRACKET@20..21 "]"
      R_PAREN@21..22 ")"
    SEMICOLON@22..23 ";"
  TopLet@23..48
    LINEFEED@23..24 "\n"
    LET_KW@24..27 "let"
    SPACE@27..28 " "
    IDENT@28..29 "_"
    SPACE@29..30 " "
    EQUALS@30..31 "="
    SPACE@31..32 " "
    ECall@32..47
      EVar@32..41
        IDENT@32..41 "array_new"
      L_PAREN@41..42 "("
      ELit@42..43
        LitInt@42..43
          INT_LIT@42..43 "1"
      COMMA@43..44 ","
      SPACE@44..45 " "
      ELit@45..46
        LitInt@45..46
          INT_LIT@45..46 "2"
      R_PAREN@46..47 ")"
    SEMICOLON@47..48 ";"

