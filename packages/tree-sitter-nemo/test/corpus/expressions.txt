================================================================================
Literals
================================================================================

global _ = 0
global _ = 4242
global _ = true
global _ = false
global _ = 0.0
global _ = 0.1234
global _ = 1234.1234

--------------------------------------------------------------------------------

(source_file
  (top_global
    (lower_ident)
    (int_lit))
  (top_global
    (lower_ident)
    (int_lit))
  (top_global
    (lower_ident)
    (bool_lit))
  (top_global
    (lower_ident)
    (bool_lit))
  (top_global
    (lower_ident)
    (float_lit))
  (top_global
    (lower_ident)
    (float_lit))
  (top_global
    (lower_ident)
    (float_lit)))

================================================================================
Types
================================================================================

global _ : i32 = 0
global _ : f32 = 0
global _ : bool = 0
global _ : unit = 0
global _ : Struct = 0
global _ : [i32] = 0
global _ : [[Struct]] = 0
global _ : fn(i32) -> f32 = 0
global _ : fn(i32, f32, fn(i32) -> i32) -> f32 = 0

--------------------------------------------------------------------------------

(source_file
  (top_global
    (lower_ident)
    (ty_i32)
    (int_lit))
  (top_global
    (lower_ident)
    (ty_f32)
    (int_lit))
  (top_global
    (lower_ident)
    (ty_bool)
    (int_lit))
  (top_global
    (lower_ident)
    (ty_unit)
    (int_lit))
  (top_global
    (lower_ident)
    (ty_struct
      (upper_ident))
    (int_lit))
  (top_global
    (lower_ident)
    (ty_array
      (ty_i32))
    (int_lit))
  (top_global
    (lower_ident)
    (ty_array
      (ty_array
        (ty_struct
          (upper_ident))))
    (int_lit))
  (top_global
    (lower_ident)
    (ty_func
      (ty_i32)
      (ty_f32))
    (int_lit))
  (top_global
    (lower_ident)
    (ty_func
      (ty_i32)
      (ty_f32)
      (ty_func
        (ty_i32)
        (ty_i32))
      (ty_f32))
    (int_lit)))

================================================================================
Array expr
================================================================================

global _ = []
global _ = [1]
global _ = [1, 2]
global _ = [1, 2,]
global _ = [[1], []]
global _ = x[1]
global _ = x[x[x]]
global _ = [1, 2][0]

--------------------------------------------------------------------------------

(source_file
  (top_global
    (lower_ident)
    (array_e))
  (top_global
    (lower_ident)
    (array_e
      (int_lit)))
  (top_global
    (lower_ident)
    (array_e
      (int_lit)
      (int_lit)))
  (top_global
    (lower_ident)
    (array_e
      (int_lit)
      (int_lit)))
  (top_global
    (lower_ident)
    (array_e
      (array_e
        (int_lit))
      (array_e)))
  (top_global
    (lower_ident)
    (array_idx_e
      (var_e
        (lower_ident))
      (int_lit)))
  (top_global
    (lower_ident)
    (array_idx_e
      (var_e
        (lower_ident))
      (array_idx_e
        (var_e
          (lower_ident))
        (var_e
          (lower_ident)))))
  (top_global
    (lower_ident)
    (array_idx_e
      (array_e
        (int_lit)
        (int_lit))
      (int_lit))))

================================================================================
Struct expr
================================================================================

global _ = Vec { }
global _ = Vec { x = 10 }
global _ = Vec { x = 10, y = 1.0 }
global _ = Vec { x = 10, y = 1.0, }
global _ = v.x
global _ = v.x.y
global _ = v[0].y
global _ = 1 + x.y

--------------------------------------------------------------------------------

(source_file
  (top_global
    (lower_ident)
    (struct_e
      (upper_ident)))
  (top_global
    (lower_ident)
    (struct_e
      (upper_ident)
      (struct_field_e
        (lower_ident)
        (int_lit))))
  (top_global
    (lower_ident)
    (struct_e
      (upper_ident)
      (struct_field_e
        (lower_ident)
        (int_lit))
      (struct_field_e
        (lower_ident)
        (float_lit))))
  (top_global
    (lower_ident)
    (struct_e
      (upper_ident)
      (struct_field_e
        (lower_ident)
        (int_lit))
      (struct_field_e
        (lower_ident)
        (float_lit))))
  (top_global
    (lower_ident)
    (struct_idx_e
      (var_e
        (lower_ident))
      (lower_ident)))
  (top_global
    (lower_ident)
    (struct_idx_e
      (struct_idx_e
        (var_e
          (lower_ident))
        (lower_ident))
      (lower_ident)))
  (top_global
    (lower_ident)
    (struct_idx_e
      (array_idx_e
        (var_e
          (lower_ident))
        (int_lit))
      (lower_ident)))
  (top_global
    (lower_ident)
    (binary_e
      (int_lit)
      (struct_idx_e
        (var_e
          (lower_ident))
        (lower_ident)))))

================================================================================
Call expr
================================================================================

global _ = f()
global _ = f(1)
global _ = f(1, 2,)
global _ = f(1, f(2))
global _ = x.f()
global _ = x[1].f()
global _ = f(1)(x)
global _ = f32_abs(delta_x) > f32_abs(delta_y)
global _ = @array_len([])
global _ = @array_new(1, 2)

--------------------------------------------------------------------------------

(source_file
  (top_global
    (lower_ident)
    (call_e
      (var_e
        (lower_ident))
      (call_args)))
  (top_global
    (lower_ident)
    (call_e
      (var_e
        (lower_ident))
      (call_args
        (int_lit))))
  (top_global
    (lower_ident)
    (call_e
      (var_e
        (lower_ident))
      (call_args
        (int_lit)
        (int_lit))))
  (top_global
    (lower_ident)
    (call_e
      (var_e
        (lower_ident))
      (call_args
        (int_lit)
        (call_e
          (var_e
            (lower_ident))
          (call_args
            (int_lit))))))
  (top_global
    (lower_ident)
    (call_e
      (struct_idx_e
        (var_e
          (lower_ident))
        (lower_ident))
      (call_args)))
  (top_global
    (lower_ident)
    (call_e
      (struct_idx_e
        (array_idx_e
          (var_e
            (lower_ident))
          (int_lit))
        (lower_ident))
      (call_args)))
  (top_global
    (lower_ident)
    (call_e
      (call_e
        (var_e
          (lower_ident))
        (call_args
          (int_lit)))
      (call_args
        (var_e
          (lower_ident)))))
  (top_global
    (lower_ident)
    (binary_e
      (call_e
        (var_e
          (lower_ident))
        (call_args
          (var_e
            (lower_ident))))
      (call_e
        (var_e
          (lower_ident))
        (call_args
          (var_e
            (lower_ident))))))
  (top_global
    (lower_ident)
    (intrinsic_e
      (intrinsic_ident)
      (call_args
        (array_e))))
  (top_global
    (lower_ident)
    (intrinsic_e
      (intrinsic_ident)
      (call_args
        (int_lit)
        (int_lit)))))

================================================================================
If expr
================================================================================

global _ = if true { 1 } else { 3 }

--------------------------------------------------------------------------------

(source_file
  (top_global
    (lower_ident)
    (if_e
      (bool_lit)
      (block_e
        (expr_decl
          (int_lit)))
      (block_e
        (expr_decl
          (int_lit))))))

================================================================================
Block expr
================================================================================

global _ = {}
global _ = {1}
global _ = {
    1;
    x;
    2
}

--------------------------------------------------------------------------------

(source_file
  (top_global
    (lower_ident)
    (block_e))
  (top_global
    (lower_ident)
    (block_e
      (expr_decl
        (int_lit))))
  (top_global
    (lower_ident)
    (block_e
      (expr_decl
        (int_lit))
      (expr_decl
        (var_e
          (lower_ident)))
      (expr_decl
        (int_lit)))))

================================================================================
Binary expr
================================================================================

global _ = 1 + 1
global _ = 1 + 1 + 1
global _ = 1 * 1 + 1
global _ = 1 + 1 * 1
global _ = 1 <= 2 && 1 < 1 || 1 >= 3 && 3 > 4 || 1 == 1 || 1 != 2

--------------------------------------------------------------------------------

(source_file
  (top_global
    (lower_ident)
    (binary_e
      (int_lit)
      (int_lit)))
  (top_global
    (lower_ident)
    (binary_e
      (binary_e
        (int_lit)
        (int_lit))
      (int_lit)))
  (top_global
    (lower_ident)
    (binary_e
      (binary_e
        (int_lit)
        (int_lit))
      (int_lit)))
  (top_global
    (lower_ident)
    (binary_e
      (int_lit)
      (binary_e
        (int_lit)
        (int_lit))))
  (top_global
    (lower_ident)
    (binary_e
      (binary_e
        (binary_e
          (int_lit)
          (int_lit))
        (binary_e
          (binary_e
            (int_lit)
            (int_lit))
          (binary_e
            (int_lit)
            (int_lit))))
      (binary_e
        (binary_e
          (binary_e
            (int_lit)
            (int_lit))
          (binary_e
            (int_lit)
            (int_lit)))
        (binary_e
          (int_lit)
          (int_lit))))))

================================================================================
Declarations
================================================================================

global _ = {
    let x = 1;
    let y : i32 = 10;
    set x = 1;
    set x[0] = 1;
    set x.y = 1;
    while x {
      1;
      2
    };
}

--------------------------------------------------------------------------------

(source_file
  (top_global
    (lower_ident)
    (block_e
      (let_decl
        (lower_ident)
        (int_lit))
      (let_decl
        (lower_ident)
        (ty_i32)
        (int_lit))
      (set_decl
        (set_var
          (lower_ident))
        (int_lit))
      (set_decl
        (set_array_idx
          (set_var
            (lower_ident))
          (int_lit))
        (int_lit))
      (set_decl
        (set_struct_idx
          (set_var
            (lower_ident))
          (lower_ident))
        (int_lit))
      (while_decl
        (var_e
          (lower_ident))
        (block_e
          (expr_decl
            (int_lit))
          (expr_decl
            (int_lit)))))))

================================================================================
Top levels
================================================================================

import internal : fn (i32, f32) -> i32 from external

struct Vec {
  x : f32,
  y : f32,
}

global x = 10
global y : f32 = 10.0

fn main() = {

}

fn add(x : i32, y : i32) : i32 = {
    x + y
}
--------------------------------------------------------------------------------

(source_file
  (top_import
    (lower_ident)
    (ty_func
      (ty_i32)
      (ty_f32)
      (ty_i32))
    (lower_ident))
  (top_struct
    (upper_ident)
    (struct_field_top
      (lower_ident)
      (ty_f32))
    (struct_field_top
      (lower_ident)
      (ty_f32)))
  (top_global
    (lower_ident)
    (int_lit))
  (top_global
    (lower_ident)
    (ty_f32)
    (float_lit))
  (top_func
    (lower_ident)
    (func_params)
    (block_e))
  (top_func
    (lower_ident)
    (func_params
      (func_param
        (lower_ident)
        (ty_i32))
      (func_param
        (lower_ident)
        (ty_i32)))
    (ty_i32)
    (block_e
      (expr_decl
        (binary_e
          (var_e
            (lower_ident))
          (var_e
            (lower_ident)))))))

================================================================================
Variants
================================================================================

variant Rope {
  struct Leaf { char : i32 },
  struct Node {
    children : [Rope],
    len : i32
  },
}

global _ = Rope::Leaf { char = 2 }
global rope = Rope::Node { children = [], len = 10 }
global _ = Rope::Node { children = [], len = 10 }

global _ = match rope {
  Rope::Leaf leaf => { leaf.char },
  Rope::Node node => { @array_len(node.children) + node.len },
}
--------------------------------------------------------------------------------

(source_file
  (top_variant
    (upper_ident)
    (top_struct
      (upper_ident)
      (struct_field_top
        (lower_ident)
        (ty_i32)))
    (top_struct
      (upper_ident)
      (struct_field_top
        (lower_ident)
        (ty_array
          (ty_struct
            (upper_ident))))
      (struct_field_top
        (lower_ident)
        (ty_i32))))
  (top_global
    (lower_ident)
    (struct_e
      (qualifier
        (upper_ident))
      (upper_ident)
      (struct_field_e
        (lower_ident)
        (int_lit))))
  (top_global
    (lower_ident)
    (struct_e
      (qualifier
        (upper_ident))
      (upper_ident)
      (struct_field_e
        (lower_ident)
        (array_e))
      (struct_field_e
        (lower_ident)
        (int_lit))))
  (top_global
    (lower_ident)
    (struct_e
      (qualifier
        (upper_ident))
      (upper_ident)
      (struct_field_e
        (lower_ident)
        (array_e))
      (struct_field_e
        (lower_ident)
        (int_lit))))
  (top_global
    (lower_ident)
    (match_e
      (var_e
        (lower_ident))
      (match_branch
        (variant_pat
          (qualifier
            (upper_ident))
          (upper_ident)
          (lower_ident))
        (block_e
          (expr_decl
            (struct_idx_e
              (var_e
                (lower_ident))
              (lower_ident)))))
      (match_branch
        (variant_pat
          (qualifier
            (upper_ident))
          (upper_ident)
          (lower_ident))
        (block_e
          (expr_decl
            (binary_e
              (intrinsic_e
                (intrinsic_ident)
                (call_args
                  (struct_idx_e
                    (var_e
                      (lower_ident))
                    (lower_ident))))
              (struct_idx_e
                (var_e
                  (lower_ident))
                (lower_ident)))))))))
