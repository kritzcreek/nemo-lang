---
source: crates/frontend/tests/parser.rs
expression: output
input_file: crates/frontend/tests/passing/toplevel.nemo
---
global _ = f()
global _ = f(1)
global _ = f(1, 2,)
global _ = f(1, f(2))
global _ = x.f()
global _ = x[1].f()
global _ = f(1)(x)


// ---
Root@0..129
  TopGlobal@0..15
    LINEFEED@0..1 "\n"
    GLOBAL_KW@1..7 "global"
    SPACE@7..8 " "
    IDENT@8..9 "_"
    SPACE@9..10 " "
    EQUALS@10..11 "="
    SPACE@11..12 " "
    ECall@12..15
      EVar@12..13
        IDENT@12..13 "f"
      EArgList@13..15
        L_PAREN@13..14 "("
        R_PAREN@14..15 ")"
  TopGlobal@15..31
    LINEFEED@15..16 "\n"
    GLOBAL_KW@16..22 "global"
    SPACE@22..23 " "
    IDENT@23..24 "_"
    SPACE@24..25 " "
    EQUALS@25..26 "="
    SPACE@26..27 " "
    ECall@27..31
      EVar@27..28
        IDENT@27..28 "f"
      EArgList@28..31
        L_PAREN@28..29 "("
        ELit@29..30
          LitInt@29..30
            INT_LIT@29..30 "1"
        R_PAREN@30..31 ")"
  TopGlobal@31..51
    LINEFEED@31..32 "\n"
    GLOBAL_KW@32..38 "global"
    SPACE@38..39 " "
    IDENT@39..40 "_"
    SPACE@40..41 " "
    EQUALS@41..42 "="
    SPACE@42..43 " "
    ECall@43..51
      EVar@43..44
        IDENT@43..44 "f"
      EArgList@44..51
        L_PAREN@44..45 "("
        ELit@45..46
          LitInt@45..46
            INT_LIT@45..46 "1"
        COMMA@46..47 ","
        SPACE@47..48 " "
        ELit@48..49
          LitInt@48..49
            INT_LIT@48..49 "2"
        COMMA@49..50 ","
        R_PAREN@50..51 ")"
  TopGlobal@51..73
    LINEFEED@51..52 "\n"
    GLOBAL_KW@52..58 "global"
    SPACE@58..59 " "
    IDENT@59..60 "_"
    SPACE@60..61 " "
    EQUALS@61..62 "="
    SPACE@62..63 " "
    ECall@63..73
      EVar@63..64
        IDENT@63..64 "f"
      EArgList@64..73
        L_PAREN@64..65 "("
        ELit@65..66
          LitInt@65..66
            INT_LIT@65..66 "1"
        COMMA@66..67 ","
        SPACE@67..68 " "
        ECall@68..72
          EVar@68..69
            IDENT@68..69 "f"
          EArgList@69..72
            L_PAREN@69..70 "("
            ELit@70..71
              LitInt@70..71
                INT_LIT@70..71 "2"
            R_PAREN@71..72 ")"
        R_PAREN@72..73 ")"
  TopGlobal@73..90
    LINEFEED@73..74 "\n"
    GLOBAL_KW@74..80 "global"
    SPACE@80..81 " "
    IDENT@81..82 "_"
    SPACE@82..83 " "
    EQUALS@83..84 "="
    SPACE@84..85 " "
    ECall@85..90
      EStructIdx@85..88
        EVar@85..86
          IDENT@85..86 "x"
        DOT@86..87 "."
        IDENT@87..88 "f"
      EArgList@88..90
        L_PAREN@88..89 "("
        R_PAREN@89..90 ")"
  TopGlobal@90..110
    LINEFEED@90..91 "\n"
    GLOBAL_KW@91..97 "global"
    SPACE@97..98 " "
    IDENT@98..99 "_"
    SPACE@99..100 " "
    EQUALS@100..101 "="
    SPACE@101..102 " "
    ECall@102..110
      EStructIdx@102..108
        EArrayIdx@102..106
          EVar@102..103
            IDENT@102..103 "x"
          L_BRACKET@103..104 "["
          ELit@104..105
            LitInt@104..105
              INT_LIT@104..105 "1"
          R_BRACKET@105..106 "]"
        DOT@106..107 "."
        IDENT@107..108 "f"
      EArgList@108..110
        L_PAREN@108..109 "("
        R_PAREN@109..110 ")"
  TopGlobal@110..129
    LINEFEED@110..111 "\n"
    GLOBAL_KW@111..117 "global"
    SPACE@117..118 " "
    IDENT@118..119 "_"
    SPACE@119..120 " "
    EQUALS@120..121 "="
    SPACE@121..122 " "
    ECall@122..129
      ECall@122..126
        EVar@122..123
          IDENT@122..123 "f"
        EArgList@123..126
          L_PAREN@123..124 "("
          ELit@124..125
            LitInt@124..125
              INT_LIT@124..125 "1"
          R_PAREN@125..126 ")"
      EArgList@126..129
        L_PAREN@126..127 "("
        EVar@127..128
          IDENT@127..128 "x"
        R_PAREN@128..129 ")"
