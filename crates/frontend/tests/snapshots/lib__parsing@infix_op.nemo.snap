---
source: crates/frontend/tests/lib.rs
assertion_line: 129
expression: output
input_file: crates/frontend/tests/parsing/infix_op.nemo
---
Root@0..211
  Module@0..211
    TopGlobal@0..16
      GLOBAL_KW@0..6 "global"
      SPACE@6..7 " "
      IDENT@7..8 "_"
      SPACE@8..9 " "
      EQUALS@9..10 "="
      SPACE@10..11 " "
      EBinary@11..16
        ELit@11..13
          LitInt@11..13
            INT_LIT@11..12 "1"
            SPACE@12..13 " "
        BinOp@13..15
          PLUS@13..14 "+"
          SPACE@14..15 " "
        ELit@15..16
          LitInt@15..16
            INT_LIT@15..16 "1"
    TopGlobal@16..37
      LINEFEED@16..17 "\n"
      GLOBAL_KW@17..23 "global"
      SPACE@23..24 " "
      IDENT@24..25 "_"
      SPACE@25..26 " "
      EQUALS@26..27 "="
      SPACE@27..28 " "
      EBinary@28..37
        ELit@28..30
          LitInt@28..30
            INT_LIT@28..29 "1"
            SPACE@29..30 " "
        BinOp@30..32
          PLUS@30..31 "+"
          SPACE@31..32 " "
        EBinary@32..37
          ELit@32..34
            LitInt@32..34
              INT_LIT@32..33 "1"
              SPACE@33..34 " "
          BinOp@34..36
            PLUS@34..35 "+"
            SPACE@35..36 " "
          ELit@36..37
            LitInt@36..37
              INT_LIT@36..37 "1"
    TopGlobal@37..58
      LINEFEED@37..38 "\n"
      GLOBAL_KW@38..44 "global"
      SPACE@44..45 " "
      IDENT@45..46 "_"
      SPACE@46..47 " "
      EQUALS@47..48 "="
      SPACE@48..49 " "
      EBinary@49..58
        EBinary@49..55
          ELit@49..51
            LitInt@49..51
              INT_LIT@49..50 "1"
              SPACE@50..51 " "
          BinOp@51..53
            STAR@51..52 "*"
            SPACE@52..53 " "
          ELit@53..55
            LitInt@53..55
              INT_LIT@53..54 "1"
              SPACE@54..55 " "
        BinOp@55..57
          PLUS@55..56 "+"
          SPACE@56..57 " "
        ELit@57..58
          LitInt@57..58
            INT_LIT@57..58 "1"
    TopGlobal@58..79
      LINEFEED@58..59 "\n"
      GLOBAL_KW@59..65 "global"
      SPACE@65..66 " "
      IDENT@66..67 "_"
      SPACE@67..68 " "
      EQUALS@68..69 "="
      SPACE@69..70 " "
      EBinary@70..79
        ELit@70..72
          LitInt@70..72
            INT_LIT@70..71 "1"
            SPACE@71..72 " "
        BinOp@72..74
          PLUS@72..73 "+"
          SPACE@73..74 " "
        EBinary@74..79
          ELit@74..76
            LitInt@74..76
              INT_LIT@74..75 "1"
              SPACE@75..76 " "
          BinOp@76..78
            STAR@76..77 "*"
            SPACE@77..78 " "
          ELit@78..79
            LitInt@78..79
              INT_LIT@78..79 "1"
    TopGlobal@79..145
      LINEFEED@79..80 "\n"
      GLOBAL_KW@80..86 "global"
      SPACE@86..87 " "
      IDENT@87..88 "_"
      SPACE@88..89 " "
      EQUALS@89..90 "="
      SPACE@90..91 " "
      EBinary@91..145
        EBinary@91..98
          ELit@91..93
            LitInt@91..93
              INT_LIT@91..92 "1"
              SPACE@92..93 " "
          BinOp@93..96
            L_ANGLE_EQ@93..95 "<="
            SPACE@95..96 " "
          ELit@96..98
            LitInt@96..98
              INT_LIT@96..97 "2"
              SPACE@97..98 " "
        BinOp@98..101
          ANDAND@98..100 "&&"
          SPACE@100..101 " "
        EBinary@101..145
          EBinary@101..117
            EBinary@101..107
              ELit@101..103
                LitInt@101..103
                  INT_LIT@101..102 "1"
                  SPACE@102..103 " "
              BinOp@103..105
                L_ANGLE@103..104 "<"
                SPACE@104..105 " "
              ELit@105..107
                LitInt@105..107
                  INT_LIT@105..106 "1"
                  SPACE@106..107 " "
            BinOp@107..110
              OROR@107..109 "||"
              SPACE@109..110 " "
            EBinary@110..117
              ELit@110..112
                LitInt@110..112
                  INT_LIT@110..111 "1"
                  SPACE@111..112 " "
              BinOp@112..115
                R_ANGLE_EQ@112..114 ">="
                SPACE@114..115 " "
              ELit@115..117
                LitInt@115..117
                  INT_LIT@115..116 "3"
                  SPACE@116..117 " "
          BinOp@117..120
            ANDAND@117..119 "&&"
            SPACE@119..120 " "
          EBinary@120..145
            EBinary@120..126
              ELit@120..122
                LitInt@120..122
                  INT_LIT@120..121 "3"
                  SPACE@121..122 " "
              BinOp@122..124
                R_ANGLE@122..123 ">"
                SPACE@123..124 " "
              ELit@124..126
                LitInt@124..126
                  INT_LIT@124..125 "4"
                  SPACE@125..126 " "
            BinOp@126..129
              OROR@126..128 "||"
              SPACE@128..129 " "
            EBinary@129..145
              EBinary@129..136
                ELit@129..131
                  LitInt@129..131
                    INT_LIT@129..130 "1"
                    SPACE@130..131 " "
                BinOp@131..134
                  DOUBLE_EQUALS@131..133 "=="
                  SPACE@133..134 " "
                ELit@134..136
                  LitInt@134..136
                    INT_LIT@134..135 "1"
                    SPACE@135..136 " "
              BinOp@136..139
                OROR@136..138 "||"
                SPACE@138..139 " "
              EBinary@139..145
                ELit@139..141
                  LitInt@139..141
                    INT_LIT@139..140 "1"
                    SPACE@140..141 " "
                BinOp@141..144
                  NOT_EQUALS@141..143 "!="
                  SPACE@143..144 " "
                ELit@144..145
                  LitInt@144..145
                    INT_LIT@144..145 "2"
    TopGlobal@145..164
      LINEFEED@145..146 "\n"
      GLOBAL_KW@146..152 "global"
      SPACE@152..153 " "
      IDENT@153..154 "_"
      SPACE@154..155 " "
      EQUALS@155..156 "="
      SPACE@156..157 " "
      EBinary@157..164
        ELit@157..159
          LitInt@157..159
            INT_LIT@157..158 "1"
            SPACE@158..159 " "
        BinOp@159..161
          PLUS@159..160 "+"
          SPACE@160..161 " "
        EStructIdx@161..164
          EVar@161..162
            IDENT@161..162 "x"
          DOT@162..163 "."
          IDENT@163..164 "y"
    TopGlobal@164..211
      LINEFEED@164..165 "\n"
      GLOBAL_KW@165..171 "global"
      SPACE@171..172 " "
      IDENT@172..173 "_"
      SPACE@173..174 " "
      EQUALS@174..175 "="
      SPACE@175..176 " "
      EBinary@176..211
        ECall@176..193
          EVar@176..183
            IDENT@176..183 "f32_abs"
          EArgList@183..193
            L_PAREN@183..184 "("
            EVar@184..191
              IDENT@184..191 "delta_x"
            R_PAREN@191..192 ")"
            SPACE@192..193 " "
        BinOp@193..195
          R_ANGLE@193..194 ">"
          SPACE@194..195 " "
        ECall@195..211
          EVar@195..202
            IDENT@195..202 "f32_abs"
          EArgList@202..211
            L_PAREN@202..203 "("
            EVar@203..210
              IDENT@203..210 "delta_y"
            R_PAREN@210..211 ")"
