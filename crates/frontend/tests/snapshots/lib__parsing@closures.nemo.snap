---
source: crates/frontend/tests/lib.rs
expression: output
input_file: crates/frontend/tests/parsing/closures.nemo
---
Root@0..121
  TopFn@0..121
    FN_KW@0..2 "fn"
    SPACE@2..3 " "
    IDENT@3..7 "main"
    L_PAREN@7..8 "("
    R_PAREN@8..9 ")"
    SPACE@9..10 " "
    EBlock@10..121
      L_BRACE@10..11 "{"
      DExpr@11..49
        ECall@11..49
          EParen@11..45
            LINEFEED@11..12 "\n"
            SPACE@12..14 "  "
            L_PAREN@14..15 "("
            ELambda@15..44
              FN_KW@15..17 "fn"
              SPACE@17..18 " "
              L_PAREN@18..19 "("
              Param@19..26
                IDENT@19..20 "x"
                SPACE@20..21 " "
                COLON@21..22 ":"
                SPACE@22..23 " "
                TyInt@23..26
                  I32_BUILTIN@23..26 "i32"
              R_PAREN@26..27 ")"
              SPACE@27..28 " "
              ARROW@28..30 "->"
              SPACE@30..31 " "
              TyInt@31..35
                I32_BUILTIN@31..34 "i32"
                SPACE@34..35 " "
              EBlock@35..44
                L_BRACE@35..36 "{"
                SPACE@36..37 " "
                DExpr@37..43
                  EBinary@37..43
                    EVar@37..39
                      IDENT@37..38 "x"
                      SPACE@38..39 " "
                    BinOp@39..41
                      PLUS@39..40 "+"
                      SPACE@40..41 " "
                    ELit@41..43
                      LitInt@41..43
                        INT_LIT@41..42 "1"
                        SPACE@42..43 " "
                R_BRACE@43..44 "}"
            R_PAREN@44..45 ")"
          EArgList@45..49
            L_PAREN@45..46 "("
            ELit@46..48
              LitInt@46..48
                INT_LIT@46..48 "10"
            R_PAREN@48..49 ")"
      SEMICOLON@49..50 ";"
      DExpr@50..112
        ECall@50..112
          EVar@50..57
            LINEFEED@50..51 "\n"
            LINEFEED@51..52 "\n"
            SPACE@52..54 "  "
            IDENT@54..57 "map"
          EArgList@57..112
            L_PAREN@57..58 "("
            EVar@58..59
              IDENT@58..59 "o"
            COMMA@59..60 ","
            SPACE@60..61 " "
            ELambda@61..111
              FN_KW@61..63 "fn"
              SPACE@63..64 " "
              L_PAREN@64..65 "("
              Param@65..72
                IDENT@65..66 "x"
                SPACE@66..67 " "
                COLON@67..68 ":"
                SPACE@68..69 " "
                TyInt@69..72
                  I32_BUILTIN@69..72 "i32"
              R_PAREN@72..73 ")"
              SPACE@73..74 " "
              ARROW@74..76 "->"
              SPACE@76..77 " "
              TyInt@77..81
                I32_BUILTIN@77..80 "i32"
                SPACE@80..81 " "
              EBlock@81..111
                L_BRACE@81..82 "{"
                DLet@82..100
                  LINEFEED@82..83 "\n"
                  SPACE@83..87 "    "
                  LET_KW@87..90 "let"
                  SPACE@90..91 " "
                  IDENT@91..92 "y"
                  SPACE@92..93 " "
                  EQUALS@93..94 "="
                  SPACE@94..95 " "
                  EBinary@95..100
                    EVar@95..97
                      IDENT@95..96 "x"
                      SPACE@96..97 " "
                    BinOp@97..99
                      STAR@97..98 "*"
                      SPACE@98..99 " "
                    EVar@99..100
                      IDENT@99..100 "x"
                SEMICOLON@100..101 ";"
                DExpr@101..107
                  EVar@101..107
                    LINEFEED@101..102 "\n"
                    SPACE@102..106 "    "
                    IDENT@106..107 "y"
                LINEFEED@107..108 "\n"
                SPACE@108..110 "  "
                R_BRACE@110..111 "}"
            R_PAREN@111..112 ")"
      SEMICOLON@112..113 ";"
      DExpr@113..118
        EBlock@113..118
          LINEFEED@113..114 "\n"
          SPACE@114..116 "  "
          L_BRACE@116..117 "{"
          R_BRACE@117..118 "}"
      SEMICOLON@118..119 ";"
      LINEFEED@119..120 "\n"
      R_BRACE@120..121 "}"
