---
source: crates/frontend/tests/lib.rs
expression: output
input_file: crates/frontend/tests/parsing/modules.nemo
---
Root@0..290
  Module@0..290
    ModHeader@0..68
      MODULE_KW@0..6 "module"
      SPACE@6..7 " "
      IDENT@7..10 "str"
      LINEFEED@10..11 "\n"
      EXPORTS_KW@11..18 "exports"
      SPACE@18..19 " "
      L_PAREN@19..20 "("
      ModExportTy@20..23
        UPPER_IDENT@20..23 "Str"
      COMMA@23..24 ","
      SPACE@24..25 " "
      ModExportVal@25..28
        IDENT@25..28 "len"
      COMMA@28..29 ","
      SPACE@29..30 " "
      ModExportVal@30..40
        IDENT@30..40 "print_char"
      R_PAREN@40..41 ")"
      ModUse@41..53
        LINEFEED@41..42 "\n"
        LINEFEED@42..43 "\n"
        USE_KW@43..46 "use"
        SPACE@46..47 " "
        IDENT@47..53 "option"
      ModUse@53..68
        LINEFEED@53..54 "\n"
        USE_KW@54..57 "use"
        SPACE@57..58 " "
        IDENT@58..68 "prim_bytes"
    TopImport@68..122
      LINEFEED@68..69 "\n"
      LINEFEED@69..70 "\n"
      IMPORT_KW@70..76 "import"
      SPACE@76..77 " "
      ImpInternal@77..88
        IDENT@77..87 "print_char"
        SPACE@87..88 " "
      COLON@88..89 ":"
      SPACE@89..90 " "
      TyFn@90..107
        FN_KW@90..92 "fn"
        SPACE@92..93 " "
        TyArgList@93..99
          L_PAREN@93..94 "("
          TyInt@94..97
            I32_BUILTIN@94..97 "i32"
          R_PAREN@97..98 ")"
          SPACE@98..99 " "
        ARROW@99..101 "->"
        SPACE@101..102 " "
        TyUnit@102..107
          UNIT_BUILTIN@102..106 "unit"
          SPACE@106..107 " "
      FROM_KW@107..111 "from"
      SPACE@111..112 " "
      ImpExternal@112..122
        IDENT@112..122 "print_char"
    TopGlobal@122..173
      LINEFEED@122..123 "\n"
      LINEFEED@123..124 "\n"
      GLOBAL_KW@124..130 "global"
      SPACE@130..131 " "
      IDENT@131..132 "s"
      SPACE@132..133 " "
      COLON@133..134 ":"
      SPACE@134..135 " "
      TyCons@135..155
        ModQualifier@135..143
          IDENT@135..141 "option"
          DOUBLE_COLON@141..143 "::"
        UPPER_IDENT@143..149 "Option"
        L_BRACKET@149..150 "["
        TyInt@150..153
          I32_BUILTIN@150..153 "i32"
        R_BRACKET@153..154 "]"
        SPACE@154..155 " "
      EQUALS@155..156 "="
      SPACE@156..157 " "
      ECall@157..173
        EVar@157..169
          ModQualifier@157..165
            IDENT@157..163 "option"
            DOUBLE_COLON@163..165 "::"
          IDENT@165..169 "some"
        EArgList@169..173
          L_PAREN@169..170 "("
          ELit@170..172
            LitInt@170..172
              INT_LIT@170..172 "10"
          R_PAREN@172..173 ")"
    TopGlobal@173..221
      LINEFEED@173..174 "\n"
      GLOBAL_KW@174..180 "global"
      SPACE@180..181 " "
      IDENT@181..183 "s2"
      SPACE@183..184 " "
      EQUALS@184..185 "="
      SPACE@185..186 " "
      EStruct@186..221
        ModQualifier@186..194
          IDENT@186..192 "option"
          DOUBLE_COLON@192..194 "::"
        Qualifier@194..202
          UPPER_IDENT@194..200 "Option"
          DOUBLE_COLON@200..202 "::"
        UPPER_IDENT@202..206 "Some"
        SPACE@206..207 " "
        L_BRACE@207..208 "{"
        SPACE@208..209 " "
        EStructField@209..220
          IDENT@209..214 "value"
          SPACE@214..215 " "
          EQUALS@215..216 "="
          SPACE@216..217 " "
          ELit@217..220
            LitInt@217..220
              INT_LIT@217..219 "10"
              SPACE@219..220 " "
        R_BRACE@220..221 "}"
    TopStruct@221..236
      LINEFEED@221..222 "\n"
      LINEFEED@222..223 "\n"
      STRUCT_KW@223..229 "struct"
      SPACE@229..230 " "
      UPPER_IDENT@230..233 "Str"
      SPACE@233..234 " "
      L_BRACE@234..235 "{"
      R_BRACE@235..236 "}"
    TopFn@236..256
      LINEFEED@236..237 "\n"
      LINEFEED@237..238 "\n"
      FN_KW@238..240 "fn"
      SPACE@240..241 " "
      IDENT@241..244 "len"
      L_PAREN@244..245 "("
      Param@245..251
        IDENT@245..246 "s"
        COLON@246..247 ":"
        SPACE@247..248 " "
        TyCons@248..251
          UPPER_IDENT@248..251 "Str"
      R_PAREN@251..252 ")"
      SPACE@252..253 " "
      EBlock@253..256
        L_BRACE@253..254 "{"
        SPACE@254..255 " "
        R_BRACE@255..256 "}"
    TopFn@256..290
      LINEFEED@256..257 "\n"
      FN_KW@257..259 "fn"
      SPACE@259..260 " "
      IDENT@260..266 "concat"
      L_PAREN@266..267 "("
      Param@267..277
        IDENT@267..269 "s1"
        SPACE@269..270 " "
        COLON@270..271 ":"
        SPACE@271..272 " "
        TyCons@272..275
          UPPER_IDENT@272..275 "Str"
        COMMA@275..276 ","
        SPACE@276..277 " "
      Param@277..285
        IDENT@277..279 "s2"
        SPACE@279..280 " "
        COLON@280..281 ":"
        SPACE@281..282 " "
        TyCons@282..285
          UPPER_IDENT@282..285 "Str"
      R_PAREN@285..286 ")"
      SPACE@286..287 " "
      EBlock@287..290
        L_BRACE@287..288 "{"
        SPACE@288..289 " "
        R_BRACE@289..290 "}"
