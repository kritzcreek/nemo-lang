---
source: crates/frontend/tests/parser.rs
expression: output
input_file: crates/frontend/tests/passing/toplevel.nemo
---
global _ = {
    let x = 1;
    let y : i32 = 10;
    set x = 1;
    set x[0] = 1;
    set x.y = 1;
    set x[0].y = 1;
    set x.y[0] = 1;
    while x {
      1;
      2
    };
}


// ---
Root@0..180
  TopGlobal@0..180
    LINEFEED@0..1 "\n"
    GLOBAL_KW@1..7 "global"
    SPACE@7..8 " "
    IDENT@8..9 "_"
    SPACE@9..10 " "
    EQUALS@10..11 "="
    SPACE@11..12 " "
    EBlock@12..180
      L_BRACE@12..13 "{"
      DLet@13..27
        LINEFEED@13..14 "\n"
        SPACE@14..18 "    "
        LET_KW@18..21 "let"
        SPACE@21..22 " "
        IDENT@22..23 "x"
        SPACE@23..24 " "
        EQUALS@24..25 "="
        SPACE@25..26 " "
        ELit@26..27
          LitInt@26..27
            INT_LIT@26..27 "1"
      SEMICOLON@27..28 ";"
      DLet@28..49
        LINEFEED@28..29 "\n"
        SPACE@29..33 "    "
        LET_KW@33..36 "let"
        SPACE@36..37 " "
        IDENT@37..38 "y"
        SPACE@38..39 " "
        COLON@39..40 ":"
        SPACE@40..41 " "
        TyInt@41..45
          I32_BUILTIN@41..44 "i32"
          SPACE@44..45 " "
        EQUALS@45..46 "="
        SPACE@46..47 " "
        ELit@47..49
          LitInt@47..49
            INT_LIT@47..49 "10"
      SEMICOLON@49..50 ";"
      DSet@50..64
        LINEFEED@50..51 "\n"
        SPACE@51..55 "    "
        SET_KW@55..58 "set"
        SPACE@58..59 " "
        SetTarget@59..61
          EVar@59..61
            IDENT@59..60 "x"
            SPACE@60..61 " "
        EQUALS@61..62 "="
        SPACE@62..63 " "
        ELit@63..64
          LitInt@63..64
            INT_LIT@63..64 "1"
      SEMICOLON@64..65 ";"
      DSet@65..82
        LINEFEED@65..66 "\n"
        SPACE@66..70 "    "
        SET_KW@70..73 "set"
        SPACE@73..74 " "
        SetTarget@74..79
          EArrayIdx@74..79
            EVar@74..75
              IDENT@74..75 "x"
            L_BRACKET@75..76 "["
            ELit@76..77
              LitInt@76..77
                INT_LIT@76..77 "0"
            R_BRACKET@77..78 "]"
            SPACE@78..79 " "
        EQUALS@79..80 "="
        SPACE@80..81 " "
        ELit@81..82
          LitInt@81..82
            INT_LIT@81..82 "1"
      SEMICOLON@82..83 ";"
      DSet@83..99
        LINEFEED@83..84 "\n"
        SPACE@84..88 "    "
        SET_KW@88..91 "set"
        SPACE@91..92 " "
        SetTarget@92..96
          EStructIdx@92..96
            EVar@92..93
              IDENT@92..93 "x"
            DOT@93..94 "."
            IDENT@94..95 "y"
            SPACE@95..96 " "
        EQUALS@96..97 "="
        SPACE@97..98 " "
        ELit@98..99
          LitInt@98..99
            INT_LIT@98..99 "1"
      SEMICOLON@99..100 ";"
      DSet@100..119
        LINEFEED@100..101 "\n"
        SPACE@101..105 "    "
        SET_KW@105..108 "set"
        SPACE@108..109 " "
        SetTarget@109..116
          EStructIdx@109..116
            EArrayIdx@109..113
              EVar@109..110
                IDENT@109..110 "x"
              L_BRACKET@110..111 "["
              ELit@111..112
                LitInt@111..112
                  INT_LIT@111..112 "0"
              R_BRACKET@112..113 "]"
            DOT@113..114 "."
            IDENT@114..115 "y"
            SPACE@115..116 " "
        EQUALS@116..117 "="
        SPACE@117..118 " "
        ELit@118..119
          LitInt@118..119
            INT_LIT@118..119 "1"
      SEMICOLON@119..120 ";"
      DSet@120..139
        LINEFEED@120..121 "\n"
        SPACE@121..125 "    "
        SET_KW@125..128 "set"
        SPACE@128..129 " "
        SetTarget@129..136
          EArrayIdx@129..136
            EStructIdx@129..132
              EVar@129..130
                IDENT@129..130 "x"
              DOT@130..131 "."
              IDENT@131..132 "y"
            L_BRACKET@132..133 "["
            ELit@133..134
              LitInt@133..134
                INT_LIT@133..134 "0"
            R_BRACKET@134..135 "]"
            SPACE@135..136 " "
        EQUALS@136..137 "="
        SPACE@137..138 " "
        ELit@138..139
          LitInt@138..139
            INT_LIT@138..139 "1"
      SEMICOLON@139..140 ";"
      DWhile@140..177
        LINEFEED@140..141 "\n"
        SPACE@141..145 "    "
        WHILE_KW@145..150 "while"
        SPACE@150..151 " "
        EVar@151..153
          IDENT@151..152 "x"
          SPACE@152..153 " "
        EBlock@153..177
          L_BRACE@153..154 "{"
          DExpr@154..162
            ELit@154..162
              LitInt@154..162
                LINEFEED@154..155 "\n"
                SPACE@155..161 "      "
                INT_LIT@161..162 "1"
          SEMICOLON@162..163 ";"
          DExpr@163..171
            ELit@163..171
              LitInt@163..171
                LINEFEED@163..164 "\n"
                SPACE@164..170 "      "
                INT_LIT@170..171 "2"
          LINEFEED@171..172 "\n"
          SPACE@172..176 "    "
          R_BRACE@176..177 "}"
      SEMICOLON@177..178 ";"
      LINEFEED@178..179 "\n"
      R_BRACE@179..180 "}"
