module byte
exports (eq, concat)

fn eq(a: Bytes, b: Bytes) -> Bool {
  let len = bytes_len(a);
  when len != bytes_len(b) {
    return false;
  };
  let i = 0;
  while i < len {
    when bytes_get(a, i) != bytes_get(b, i) {
      return false;
    };
    set i = i + 1;
  };
  true
}

fn concat(b1: Bytes, b2: Bytes) -> Bytes {
  let len1 = bytes_len(b1);
  let len2 = bytes_len(b2);
  let len = len1 + len2;
  let b = bytes_new(0, len);
  bytes_copy(b, 0, b1, 0, len1);
  bytes_copy(b, len1, b2, 0, len2);
  b
}
